{"version":3,"sources":["../../src/api/index.js"],"names":["config","db","api","post","req","res","body","undefined","statusCode","json","payload","Array","isArray","response","element","address","type","workflow","concatenated_address","buildingNumber","street","suburb","state","postcode","transformed_element","concataddress","push"],"mappings":";;;;;;;;AAAA;;AACA;;kBAEe,gBAAmB;AAAA,KAAhBA,MAAgB,QAAhBA,MAAgB;AAAA,KAATC,EAAS,QAATA,EAAS;;AACjC,KAAIC,MAAM,sBAAV;;AAEAA,KAAIC,IAAJ,CAAU,GAAV,EAAe,UAAEC,GAAF,EAAOC,GAAP,EAAgB;;AAE9B;AACA,MAAIC,OAAOF,IAAIE,IAAf;;AAEA,MAAKA,SAASC,SAAd,EAA0B;AACzBF,OAAIG,UAAJ,GAAiB,GAAjB;AACAH,OAAII,IAAJ,CAAU;AACT,aAAS;AADA,IAAV;AAGA,GALD,MAKO;AACN;AACA,OAAIC,UAAUJ,KAAKI,OAAnB;;AAEA,OAAKA,YAAYH,SAAjB,EAA6B;AAC5BF,QAAIG,UAAJ,GAAiB,GAAjB;AACAH,QAAII,IAAJ,CAAU;AACT,cAAS;AADA,KAAV;AAIA,IAND,MAMO;;AAEN;AACA,QAAK,CAACE,MAAMC,OAAN,CAAeF,OAAf,CAAN,EAAiC;AAChCL,SAAIG,UAAJ,GAAiB,GAAjB;AACAH,SAAII,IAAJ,CAAU;AACT,eAAS;AADA,MAAV;AAGA,KALD,MAKO;;AAEN,SAAII,WAAW,EAAf;AACA;AAHM;AAAA;AAAA;;AAAA;AAIN,2BAAqBH,OAArB,8HAA+B;AAAA,WAArBI,OAAqB;;AAC9B;AACA,WAAK,QAAOA,QAAQC,OAAf,MAA2BR,SAA3B,IAAwC,QAAOO,QAAQE,IAAf,MAAwBT,SAAhE,IAA6E,QAAOO,QAAQG,QAAf,MAA4BV,SAA9G,EAA0H;AACzH;AACA,QAFD,MAEO;AACN;AACA,YAAKO,QAAQE,IAAR,KAAiB,KAAjB,IAA0BF,QAAQG,QAAR,KAAqB,WAApD,EAAkE;AAAE;AACnE,aAAIC,uBAAuBJ,QAAQC,OAAR,CAAgBI,cAAhB,GAAiC,GAAjC,GAC1BL,QAAQC,OAAR,CAAgBK,MADU,GACD,GADC,GAE1BN,QAAQC,OAAR,CAAgBM,MAFU,GAED,GAFC,GAG1BP,QAAQC,OAAR,CAAgBO,KAHU,GAGF,GAHE,GAI1BR,QAAQC,OAAR,CAAgBQ,QAJjB;AAKA,aAAIC,sBAAsB;AACzBC,yBAAeP,oBADU;AAEzBF,gBAAMF,QAAQE,IAFW,EAEL;AACpBC,oBAAUH,QAAQG,QAHO,CAGE;AAHF,UAA1B;AAKAJ,kBAASa,IAAT,CAAeF,mBAAf;AACA;AACD;AAED;AACD;AA1BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2BNnB,SAAIG,UAAJ,GAAiB,GAAjB;AACAH,SAAII,IAAJ,CAAU;AACTI,gBAAUA;AADD,MAAV;AAGA;AAED;AAGD;AAED,EAlED;;AAoEA,QAAOX,GAAP;AACA,C","file":"index.js","sourcesContent":["import { version } from '../../package.json';\nimport { Router } from 'express';\n\nexport default ( {config,db} ) => {\n\tlet api = Router();\n\n\tapi.post( '/', ( req, res ) => {\n\n\t\t// Examine the body\n\t\tlet body = req.body;\n\n\t\tif ( body === undefined ) {\n\t\t\tres.statusCode = 400;\n\t\t\tres.json( {\n\t\t\t\t\"error\": \"Could not decode request: no body provided\"\n\t\t\t} );\n\t\t} else {\n\t\t\t// Examine the payload\n\t\t\tlet payload = body.payload;\n\n\t\t\tif ( payload === undefined ) {\n\t\t\t\tres.statusCode = 400;\n\t\t\t\tres.json( {\n\t\t\t\t\t\"error\": \"Could not decode request: no payload provided\"\n\t\t\t\t} );\n\n\t\t\t} else {\n\n\t\t\t\t// Check the payload is an array\n\t\t\t\tif ( !Array.isArray( payload ) ) {\n\t\t\t\t\tres.statusCode = 400;\n\t\t\t\t\tres.json( {\n\t\t\t\t\t\t\"error\": \"Could not decode request: the payload was not an array\"\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\n\t\t\t\t\tlet response = [];\n\t\t\t\t\t// Iterate through each of the elements of the payload array\n\t\t\t\t\tfor ( var element of payload ) {\n\t\t\t\t\t\t// Check that there is an \"address\", \"type\" and \"workflow\" key\n\t\t\t\t\t\tif ( typeof element.address === undefined || typeof element.type === undefined || typeof element.workflow === undefined ) {\n\t\t\t\t\t\t\t// Ignore it for now (i.e. don't bomb if there's on bad apple), but this should really be identified in a data test\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Check that the type is \"htv\" and the workflow is \"completed\"\n\t\t\t\t\t\t\tif ( element.type === \"htv\" && element.workflow === \"completed\" ) { // This content would of course be better provided as parameters to the POST query- i.e filter by type=foo and workflow=bar\n\t\t\t\t\t\t\t\tlet concatenated_address = element.address.buildingNumber + \" \" +\n\t\t\t\t\t\t\t\t\telement.address.street + \" \" +\n\t\t\t\t\t\t\t\t\telement.address.suburb + \" \" +\n\t\t\t\t\t\t\t\t\telement.address.state + \" \" +\n\t\t\t\t\t\t\t\t\telement.address.postcode;\n\t\t\t\t\t\t\t\tlet transformed_element = {\n\t\t\t\t\t\t\t\t\tconcataddress: concatenated_address,\n\t\t\t\t\t\t\t\t\ttype: element.type, // Setting this to element.type rather than \"htv\" for possible future expansion\n\t\t\t\t\t\t\t\t\tworkflow: element.workflow // Ditto\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tresponse.push( transformed_element );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\t// Send it\n\t\t\t\t\tres.statusCode = 200;\n\t\t\t\t\tres.json( {\n\t\t\t\t\t\tresponse: response\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t} );\n\n\treturn api;\n}"]}